#!/usr/bin/env python
 
#
# ################################################################
#
# ProActive Parallel Suite(TM): The Java(TM) library for
#    Parallel, Distributed, Multi-Core Computing for
#    Enterprise Grids & Clouds
#
# Copyright (C) 1997-2011 INRIA/University of
#                 Nice-Sophia Antipolis/ActiveEon
# Contact: proactive@ow2.org or contact@activeeon.com
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation; version 3 of
# the License.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
# USA
#
# If needed, contact us to obtain a release under GPL Version 2 or 3
# or a different license than the AGPL.
#
#  Initial developer(s):               The ActiveEon Team
#                        http://www.activeeon.com/
#  Contributor(s):
#
# ################################################################ 
# $$ACTIVEEON_CONTRIBUTOR$$
# 
 
import commands
import sys
import gtk, os
import signal
 
dir="/usr/bin/PAAgent/Image"
pixbufs=[]
image=None
pos=0
 
def loadImages():
    for file in os.listdir(dir):
        filePath=os.path.join(dir, file)
        pix=gtk.gdk.pixbuf_new_from_file(filePath)
        pixbufs.append(pix)
        print("Loaded image "+filePath)
 
def getEventKey(widget, event):
    
    commands.getoutput('python /usr/bin/PAAgent/client_daemon.py stopJVM')
    exit()

# Send signal to the daemon on exit	
def signal_handler(signal, frame):
    commands.getoutput('python /usr/bin/PAAgent/client_daemon.py stopJVM')
    exit()

def main():
    global image
    window = gtk.Window()
    window.connect("destroy", gtk.main_quit)
    window.connect("key-press-event", getEventKey)
    image=gtk.Image()
    window.add(image)
    loadImages()
    image.set_from_pixbuf(pixbufs[pos])
 
    window.show_all()
    window.fullscreen()
    gtk.main()
 
if __name__=="__main__":
		
	# Send signal to the daemon on start		
    commands.getoutput('python /usr/bin/PAAgent/client_daemon.py startJVM')
    signal.signal(signal.SIGTERM, signal_handler)
    main()


